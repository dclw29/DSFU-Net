##############################################################################
#   Diffuse scattering analysis code
#   Chloe Fuller, 2022
##############################################################################

import MC_models_Building as models
import MC_models_Utils as Utils
import MC_models_Exports as exports
import sys
import time
import MC_models_Imports as imports
import numpy as np
import random as rand
import matplotlib.pyplot as plt
rand.seed()
filestem = sys.argv[1]
run = int(sys.argv[2])

def V_true(C, i, i_shift, j, j_shift,k,k_shift):
    """
    Return true of the vector i, j corresponds to positive 1 (i.e. a sequence of A B), sequence of B A would return minus 1 (so take abs as B A also counts for A B to be adjacent)
    i, j current location in matrix, i_shift and j_shift are indiced of V
    """
    x = np.shape(C)[0]
    c = np.tile(C,(3,3,3))

    if c[i+x, j+x,k+x] - c[i+x+i_shift, j+x+j_shift,k+x+k_shift] == 1:
        return True
    else:
        return False 

def V_sum(C, i, j,k,ma):
    """
    How many times does a sequence A, B occur over the vector direction {i, j} in the crystal C?
    Note we always want to use a sliding window for the crystal so we can maximise information (i.e. don't skip potential off center sequences)
    If i or j are negative, do we need to start counting from the other side of the crystal?
    """
    num = 0
    # width of array possibility
    W = np.shape(C)[0]
    # and height
    H = np.shape(C)[1]

    D = np.shape(C)[2]
    counter = 0
    for w in range(W):
        for h in range(H):
            for d in range(D):
                num += V_true(C, w, i, h, j,d,k)
                counter += 1
    prob = num/counter
    al = 1-(prob/(ma*(1-ma)))

    return al # number of occurances for V indices i and j

def mass_calc(C, VARIANT_ABUNDANCE, I=1,J=1,K=1):
    """
    From i=0 to i=I and j=0 to j=J (indices of matrix), calculate the number of occurances of the sequence 
    Generators list of current indices i and j and the number of occurances
    """
    ma = np.average(VARIANT_ABUNDANCE)
    for i in range(0,I+1):
        for j in range(-J,J+1):
            for k in range(-K,K+1):
                if i == 0 and j == 0 and k < 0: continue
                elif i == 0 and j < 0: continue 
                else: yield ["%i %i %i"%(i,j,k), V_sum(C, i, j,k,ma)]


def initialise(N):
    """
    Create crystal of random 1s and 0s (for testing), 1 = mol A, 0 = mol B
    """
    #return np.random.randint(2, size=(N,N))
    x = np.full((N,N),-1,dtype=int)
    x[1::2,::2] = 1
    x[::2,1::2] = 1
    return x

CELL,BOX_SIZE,USE_PADDING,DIMENSIONS,SITES,SITE_ATOMS,SITE_VARIANTS,VARIANT_ABUNDANCE,TARGET_CORRELATIONS,FORCE_CONSTANTS,NEIGHBOUR_DIRECTIONS,MC_CYCLES,MC_TEMP,neighbourContacts,atoms = imports.readParamFile(f'{filestem}.params')
if DIMENSIONS < 3: repeats = imports.getRepeats(f'{filestem}.params')
else: repeats = 1

supercell, VARIANT_ABUNDANCE = models.buildModel(BOX_SIZE,SITES,SITE_VARIANTS,VARIANT_ABUNDANCE)
#print(supercell)
#t2 = time.time()

neighbours = models.getNeighbours(BOX_SIZE,SITES,SITE_VARIANTS, supercell, neighbourContacts,USE_PADDING)
t0 = time.time()
supercell, correlations = Utils.MCOrdering(BOX_SIZE,SITE_ATOMS,VARIANT_ABUNDANCE,DIMENSIONS,MC_CYCLES,MC_TEMP, TARGET_CORRELATIONS, FORCE_CONSTANTS, NEIGHBOUR_DIRECTIONS,supercell,neighbours)
t1 = time.time()
print("time: {:.4f}s".format(t1-t0))
q = np.reshape(supercell[:,4], (BOX_SIZE[0],BOX_SIZE[1],BOX_SIZE[2]))
q = np.where(q <0,0,q)

plt.imshow(q[:,:,int(BOX_SIZE[2]/2)])
plt.show()
#print(q)

#atomArray = models.convertToAtoms(BOX_SIZE,SITE_ATOMS,supercell,atoms)
#average,Uiso = Utils.averageUnitCell(CELL,BOX_SIZE,SITE_ATOMS,atomArray,USE_PADDING)
#exports.Scatty(filestem,run,atomArray,average,CELL,BOX_SIZE,SITE_ATOMS,USE_PADDING)


TOTAL_NUM = mass_calc(q)
for item in TOTAL_NUM:
    print(item)



#print("setup: {:.4f}s".format(t2-t1))
'''
nx = modelParams.nx
ny = modelParams.ny
nz = modelParams.nz
natoms = modelParams.natoms
nlayers = 3*nx
mods = np.full(nlayers,1)
for i in range(len(mods)):
    if rand.random() < 0.5: mods[i] = -1


supercellArray = models.convertSitesToAtoms(supercell, siteTypes,modelParams,siteParams,atoms)
vP = siteParams.variantPercentages
for l in range(natoms):
    count = 0
    for i in range(nx):
        for j in range(ny):
            for k in range(nz):
                address = (i*(ny)*(nz)+(j*(nz))+k)*natoms + l
                if i == 0 or i == nx-1 or j == 0 or j == ny-1 or k == 0 or k == nz-1:
                    supercell[address] = 0
                else:
                    x = np.array([(supercellArray[address,2]+i)/nx,(supercellArray[address,3]+j)/ny,(supercellArray[address,4]+k)/nz])
                    diag = np.array([1,1,1])
                    proj = np.dot(x,diag)/((np.linalg.norm(diag))**2 )
                    layer = int(proj*nlayers)
                    if mods[layer] == -1: 
                        supercell[address] = -1
                        count += 1
    vP[l] = float(count*100) / (nx*ny*nz)

for i in range(len(vP)):
    vP[i] = np.average(vP)

#t3 = time.time()
#print("disorder: {:.4f}s".format(t3-t2))

neighbours = models.setupNeighbours3D(modelParams, siteParams, neighbourContacts,True)

#t4 = time.time()
#print("neighbours: {:.4f}s".format(t4-t3))

supercellArray = models.convertSitesToAtoms(supercell, siteTypes,modelParams,siteParams,atoms)

#t5 = time.time()
#print("convert: {:.4f}s".format(t5-t4))

average,Uiso = Utils.averageUnitCell(supercellArray,modelParams,1)

#t6 = time.time()
#print("average: {:.4f}s".format(t6-t5))

#MC ordering of supercell

supercell, correlations = Utils.MCOrdering(supercell, modelParams,siteParams,neighbours, [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], Correlations,MC,"Sites")

#supercellArray = models.convertSitesToAtoms(supercell, siteTypes,modelParams,siteParams,atoms)

# layers are in a stupid direction so need to use alternative crystal building
# all plus 0.001 to move off unit cell edge - ruins layers
unitCellOld = np.array([
[39, 39,	0.00500,	0.00500,	0.00500],
[3,	 3,	    0.00500,	0.25500,	0.25500],
[3,	 3,	    0.00500,	0.25500,	0.75500],
[39, 39,	0.00500,	0.50500,	0.50500],
[3,	 3,	    0.00500,	0.75500,	0.25500],
[3,	 3,	    0.00500,	0.75500,	0.75500],
[3,	 3,	    0.25500,	0.00500,	0.25500],
[3,	 3,	    0.25500,	0.00500,	0.75500],
[3,	 3,	    0.25500,	0.25500,	0.00500],
[3,	 3,	    0.25500,	0.25500,	0.50500],
[3,	 3,	    0.25500,	0.50500,	0.25500],
[3,	 3,	    0.25500,	0.50500,	0.75500],
[3,	 3,	    0.25500,	0.75500,	0.00500],
[3,	 3,	    0.25500,	0.75500,	0.50500],
[39, 39,	0.50500,	0.00500,	0.50500],
[3,	 3,	    0.50500,	0.25500,	0.25500],
[3,	 3,	    0.50500,	0.25500,	0.75500],
[39, 39,	0.50500,	0.50500,	0.00500],
[3,	 3,	    0.50500,	0.75500,	0.25500],
[3,	 3,	    0.50500,	0.75500,	0.75500],
[3,	 3,	    0.75500,	0.00500,	0.25500],
[3,	 3,	    0.75500,	0.00500,	0.75500],
[3,	 3,	    0.75500,	0.25500,	0.00500],
[3,	 3,	    0.75500,	0.25500,	0.50500],
[3,	 3,	    0.75500,	0.50500,	0.25500],
[3,	 3,	    0.75500,	0.50500,	0.75500],
[3,	 3,	    0.75500,	0.75500,	0.00500],
[3,	 3, 	0.75500,	0.75500,	0.50500]])
# layers normal to 111
unitCell = np.array([
[39, 39,	0.00500,	0.00500,	0.00500],
#[3, 3,	0.50500,	0.50500,	0.50500],#
#[3, 3,	0.00500,	0.00500,	0.50500],#
#[3, 3,	0.50500,	0.00500,	0.00500],#
#[3, 3,	0.00500,	0.50500,	0.00500],#
#[53, 53,	0.00500,	0.00100,	0.24873],
#[53, 53,	0.00500,	0.00100,	0.75127],
#[53, 53,	0.00500,	0.24873,	0.00100],
[3,	 3,	    0.00500,	0.25500,	0.25500],
[39,	 39,	    0.00500,	0.25500,	0.75500],
#[53, 53,	0.00500,	0.25127,	0.50100],
#[53, 53,	0.00500,	0.50100,	0.25127],
[39, 39,	0.00500,	0.50500,	0.50500],
#[53, 53,	0.00500,	0.50100,	0.74873],
#[53, 53,	0.00500,	0.74873,	0.50100],
[39,	 39,	    0.00500,	0.75500,	0.25500],
[3,	 3,	    0.00500,	0.75500,	0.75500],
#[53, 53,	0.00100,	0.75127,	0.00100],
#[53, 53,	0.24873,	0.00100,	0.00100],
#[53, 53,	0.24873,	0.50100,	0.50100],
[3,	 3,	    0.25500,	0.00500,	0.25500],
[39,	 39,	    0.25500,	0.00500,	0.75500],
[3,	 3,	    0.25500,	0.25500,	0.00500],
#[53, 53,	0.25100,	0.25100,	0.25100],
[39,	 39,	    0.25500,	0.25500,	0.50500],
#[53, 53,	0.25100,	0.25100,	0.75100],
[39,	 39,	    0.25500,	0.50500,	0.25500],
[3,	 3,	    0.25500,	0.50500,	0.75500],
[39,	 39,	    0.25500,	0.75500,	0.00500],
#[53, 53,	0.25100,	0.75100,	0.25100],
[3,	 3,	    0.25500,	0.75500,	0.50500],
#[53, 53,	0.25100,	0.75100,	0.75100],
#[53, 53,	0.25127,	0.00100,	0.50100],
#[53, 53,	0.25127,	0.50100,	0.00100],
#[53, 53,	0.50100,	0.00100,	0.25127],
[39, 39,	0.50500,	0.00500,	0.50500],
#[53, 53,	0.50100,	0.00100,	0.74873],
#[53, 53,	0.50100,	0.24873,	0.50000],
[39,	 39,	    0.50500,	0.25500,	0.25500],
[3,	 3,	    0.50500,	0.25500,	0.75500],
#[53, 53,	0.50100,	0.25127,	0.00100],
[39, 39,	0.50500,	0.50500,	0.00500],
#[53, 53,	0.50100,	0.50100,	0.24873],
#[53, 53,	0.50100,	0.50100,	0.75127],
#[53, 53,	0.50100,	0.74873,	0.00100],
[3,	 3,	    0.50500,	0.75500,	0.25500],
[39,	 39,	    0.50500,	0.75500,	0.75500],
#[53, 53,	0.50100,	0.75127,	0.50100],
#[53, 53,	0.75873,	0.00100,	0.50100],
#[53, 53,	0.75873,	0.50100,	0.00100],
[39,	 39,	    0.75500,	0.00500,	0.25500],
[3,	 3,	    0.75500,	0.00500,	0.75500],
[39,	 39,	    0.75500,	0.25500,	0.00500],
#[53, 53,	0.75100,	0.25100,	0.25100],
[3,	 3,	    0.75500,	0.25500,	0.50500],
#[53, 53,	0.75100,	0.25100,	0.75100],
[3,	 3,	    0.75500,	0.50500,	0.25500],
[39,	 39,	    0.75500,	0.50500,	0.75500],
[3,	 3,	    0.75500,	0.75500,	0.00500],
#[53, 53,	0.75100,	0.75100,	0.25100],
[39,	 39, 	0.75500,	0.75500,	0.50500]])
#[53, 53,	0.75100,	0.75100,	0.75100],
#[53, 53,	0.75127,	0.00100,	0.00100],
#[53, 53,	0.75127,	0.50100,	0.50100]])
# layers normal to -1-11
unitCell2 = np.array([
[39, 39,	0.00500,	0.00500,	0.00500],
[39,	 39,	    0.00500,	0.25500,	0.25500],
[3,	 3,	    0.00500,	0.25500,	0.75500],
[39, 39,	0.00500,	0.50500,	0.50500],
[3,	 3,	    0.00500,	0.75500,	0.25500],
[39,	 39,	    0.00500,	0.75500,	0.75500],
[39,	 39,	    0.25500,	0.00500,	0.25500],
[3,	 3,	    0.25500,	0.00500,	0.75500],
[3,	 3,	    0.25500,	0.25500,	0.00500],
[39,	 39,	    0.25500,	0.25500,	0.50500],
[3,	 3,	    0.25500,	0.50500,	0.25500],
[39,	 39,	    0.25500,	0.50500,	0.75500],
[39,	 39,	    0.25500,	0.75500,	0.00500],
[3,	 3,	    0.25500,	0.75500,	0.50500],
[39, 39,	0.50500,	0.00500,	0.50500],
[3,	 3,	    0.50500,	0.25500,	0.25500],
[39,	 39,	    0.50500,	0.25500,	0.75500],
[39, 39,	0.50500,	0.50500,	0.00500],
[39,	 39,	    0.50500,	0.75500,	0.25500],
[3,	 3,	    0.50500,	0.75500,	0.75500],
[3,	 3,	    0.75500,	0.00500,	0.25500],
[39,	 39,	    0.75500,	0.00500,	0.75500],
[39,	 39,	    0.75500,	0.25500,	0.00500],
[3,	 3,	    0.75500,	0.25500,	0.50500],
[39,	 39,	    0.75500,	0.50500,	0.25500],
[3,	 3,	    0.75500,	0.50500,	0.75500],
[3,	 3,	    0.75500,	0.75500,	0.00500],
[39,	 39, 	0.75500,	0.75500,	0.50500]])
# layers normal to 1-11
unitCell3 = np.array([
[39, 39,	0.00500,	0.00500,	0.00500],
[39,	 39,	    0.00500,	0.25500,	0.25500],
[3,	 3,	    0.00500,	0.25500,	0.75500],
[39, 39,	0.00500,	0.50500,	0.50500],
[3,	 3,	    0.00500,	0.75500,	0.25500],
[39,	 39,	    0.00500,	0.75500,	0.75500],
[3,	 3,	    0.25500,	0.00500,	0.25500],
[39,	 39,	    0.25500,	0.00500,	0.75500],
[39,	 39,	    0.25500,	0.25500,	0.00500],
[3,	 3,	    0.25500,	0.25500,	0.50500],
[39,	 39,	    0.25500,	0.50500,	0.25500],
[3,	 3,	    0.25500,	0.50500,	0.75500],
[3,	 3,	    0.25500,	0.75500,	0.00500],
[39,	 39,	    0.25500,	0.75500,	0.50500],
[39, 39,	0.50500,	0.00500,	0.50500],
[3,	 3,	    0.50500,	0.25500,	0.25500],
[39,	 39,	    0.50500,	0.25500,	0.75500],
[39, 39,	0.50500,	0.50500,	0.00500],
[39,	 39,	    0.50500,	0.75500,	0.25500],
[3,	 3,	    0.50500,	0.75500,	0.75500],
[39,	 39,	    0.75500,	0.00500,	0.25500],
[3,	 3,	    0.75500,	0.00500,	0.75500],
[3,	 3,	    0.75500,	0.25500,	0.00500],
[39,	 39,	    0.75500,	0.25500,	0.50500],
[3,	 3,	    0.75500,	0.50500,	0.25500],
[39,	 39,	    0.75500,	0.50500,	0.75500],
[39,	 39,	    0.75500,	0.75500,	0.00500],
[3,	 3, 	0.75500,	0.75500,	0.50500]])
# layers normal to -111
unitCell4 = np.array([
[39, 39,	0.00500,	0.00500,	0.00500],
[3,	 3,	    0.00500,	0.25500,	0.25500],
[39,	 39,	    0.00500,	0.25500,	0.75500],
[39, 39,	0.00500,	0.50500,	0.50500],
[39,	 39,	    0.00500,	0.75500,	0.25500],
[3,	 3,	    0.00500,	0.75500,	0.75500],
[39,	 39,	    0.25500,	0.00500,	0.25500],
[3,	 3,	    0.25500,	0.00500,	0.75500],
[39,	 39,	    0.25500,	0.25500,	0.00500],
[3,	 3,	    0.25500,	0.25500,	0.50500],
[3,	 3,	    0.25500,	0.50500,	0.25500],
[39,	 39,	    0.25500,	0.50500,	0.75500],
[3,	 3,	    0.25500,	0.75500,	0.00500],
[39,	 39,	    0.25500,	0.75500,	0.50500],
[39, 39,	0.50500,	0.00500,	0.50500],
[39,	 39,	    0.50500,	0.25500,	0.25500],
[3,	 3,	    0.50500,	0.25500,	0.75500],
[39, 39,	0.50500,	0.50500,	0.00500],
[3,	 3,	    0.50500,	0.75500,	0.25500],
[39,	 39,	    0.50500,	0.75500,	0.75500],
[3,	 3,	    0.75500,	0.00500,	0.25500],
[39,	 39,	    0.75500,	0.00500,	0.75500],
[3,	 3,	    0.75500,	0.25500,	0.00500],
[39,	 39,	    0.75500,	0.25500,	0.50500],
[39,	 39,	    0.75500,	0.50500,	0.25500],
[3,	 3,	    0.75500,	0.50500,	0.75500],
[39,	 39,	    0.75500,	0.75500,	0.00500],
[3,	 3, 	0.75500,	0.75500,	0.50500]])

SCell = np.array([
[3,3,	0.001667,	0.085000,	0.085000],
[3,3,	0.001667,	0.251667,	0.251667],
[3,3,	0.085000,	0.001667,	0.085000],
[3,3,	0.085000,	0.085000,	0.001667],
[3,3,	0.085000,	0.168333,	0.251667],
[3,3,	0.085000,	0.251667,	0.168333],
[3,3,	0.168333,	0.085000,	0.251667],
[3,3,	0.168333,	0.251667,	0.085000],
[3,3,	0.251667,	0.001667,	0.251667],
[3,3,	0.251667,	0.085000,	0.168333],
[3,3,	0.251667,	0.168333,	0.085000],
[3,3,	0.251667,	0.251667,	0.001667],
[3,3,	0.001667,	0.085000,	0.418333],
[3,3,	0.001667,	0.251667,	0.585000],
[3,3,	0.085000,	0.001667,	0.418333],
[3,3,	0.085000,	0.085000,	0.335000],
[3,3,	0.085000,	0.168333,	0.585000],
[3,3,	0.085000,	0.251667,	0.501667],
[3,3,	0.168333,	0.085000,	0.585000],
[3,3,	0.168333,	0.251667,	0.418333],
[3,3,	0.251667,	0.001667,	0.585000],
[3,3,	0.251667,	0.085000,	0.501667],
[3,3,	0.251667,	0.168333,	0.418333],
[3,3,	0.251667,	0.251667,	0.335000],
[3,3,	0.001667,	0.085000,	0.751667],
[3,3,	0.001667,	0.251667,	0.918333],
[3,3,	0.085000,	0.001667,	0.751667],
[3,3,	0.085000,	0.085000,	0.668333],
[3,3,	0.085000,	0.168333,	0.918333],
[3,3,	0.085000,	0.251667,	0.835000],
[3,3,	0.168333,	0.085000,	0.918333],
[3,3,	0.168333,	0.251667,	0.751667],
[3,3,	0.251667,	0.001667,	0.918333],
[3,3,	0.251667,	0.085000,	0.835000],
[3,3,	0.251667,	0.168333,	0.751667],
[3,3,	0.251667,	0.251667,	0.668333],
[3,3,	0.001667,	0.418333,	0.085000],
[3,3,	0.001667,	0.585000,	0.251667],
[3,3,	0.085000,	0.335000,	0.085000],
[3,3,	0.085000,	0.418333,	0.001667],
[3,3,	0.085000,	0.501667,	0.251667],
[3,3,	0.085000,	0.585000,	0.168333],
[3,3,	0.168333,	0.418333,	0.251667],
[3,3,	0.168333,	0.585000,	0.085000],
[3,3,	0.251667,	0.335000,	0.251667],
[3,3,	0.251667,	0.418333,	0.168333],
[3,3,	0.251667,	0.501667,	0.085000],
[3,3,	0.251667,	0.585000,	0.001667],
[3,3,	0.001667,	0.418333,	0.418333],
[3,3,	0.001667,	0.585000,	0.585000],
[3,3,	0.085000,	0.335000,	0.418333],
[3,3,	0.085000,	0.418333,	0.335000],
[3,3,	0.085000,	0.501667,	0.585000],
[3,3,	0.085000,	0.585000,	0.501667],
[3,3,	0.168333,	0.418333,	0.585000],
[3,3,	0.168333,	0.585000,	0.418333],
[3,3,	0.251667,	0.335000,	0.585000],
[3,3,	0.251667,	0.418333,	0.501667],
[3,3,	0.251667,	0.501667,	0.418333],
[3,3,	0.251667,	0.585000,	0.335000],
[3,3,	0.001667,	0.418333,	0.751667],
[3,3,	0.001667,	0.585000,	0.918333],
[3,3,	0.085000,	0.335000,	0.751667],
[3,3,	0.085000,	0.418333,	0.668333],
[3,3,	0.085000,	0.501667,	0.918333],
[3,3,	0.085000,	0.585000,	0.835000],
[3,3,	0.168333,	0.418333,	0.918333],
[3,3,	0.168333,	0.585000,	0.751667],
[3,3,	0.251667,	0.335000,	0.918333],
[3,3,	0.251667,	0.418333,	0.835000],
[3,3,	0.251667,	0.501667,	0.751667],
[3,3,	0.251667,	0.585000,	0.668333],
[3,3,	0.001667,	0.751667,	0.085000],
[3,3,	0.001667,	0.918333,	0.251667],
[3,3,	0.085000,	0.668333,	0.085000],
[3,3,	0.085000,	0.751667,	0.001667],
[3,3,	0.085000,	0.835000,	0.251667],
[3,3,	0.085000,	0.918333,	0.168333],
[3,3,	0.168333,	0.751667,	0.251667],
[3,3,	0.168333,	0.918333,	0.085000],
[3,3,	0.251667,	0.668333,	0.251667],
[3,3,	0.251667,	0.751667,	0.168333],
[3,3,	0.251667,	0.835000,	0.085000],
[3,3,	0.251667,	0.918333,	0.001667],
[3,3,	0.001667,	0.751667,	0.418333],
[3,3,	0.001667,	0.918333,	0.585000],
[3,3,	0.085000,	0.668333,	0.418333],
[3,3,	0.085000,	0.751667,	0.335000],
[3,3,	0.085000,	0.835000,	0.585000],
[3,3,	0.085000,	0.918333,	0.501667],
[3,3,	0.168333,	0.751667,	0.585000],
[3,3,	0.168333,	0.918333,	0.418333],
[3,3,	0.251667,	0.668333,	0.585000],
[3,3,	0.251667,	0.751667,	0.501667],
[3,3,	0.251667,	0.835000,	0.418333],
[3,3,	0.251667,	0.918333,	0.335000],
[3,3,	0.001667,	0.751667,	0.751667],
[3,3,	0.001667,	0.918333,	0.918333],
[3,3,	0.085000,	0.668333,	0.751667],
[3,3,	0.085000,	0.751667,	0.668333],
[3,3,	0.085000,	0.835000,	0.918333],
[3,3,	0.085000,	0.918333,	0.835000],
[3,3,	0.168333,	0.751667,	0.918333],
[3,3,	0.168333,	0.918333,	0.751667],
[3,3,	0.251667,	0.668333,	0.918333],
[3,3,	0.251667,	0.751667,	0.835000],
[3,3,	0.251667,	0.835000,	0.751667],
[3,3,	0.251667,	0.918333,	0.668333],
[3,3,	0.335000,	0.085000,	0.085000],
[3,3,	0.335000,	0.251667,	0.251667],
[3,3,	0.418333,	0.001667,	0.085000],
[3,3,	0.418333,	0.085000,	0.001667],
[3,3,	0.418333,	0.168333,	0.251667],
[3,3,	0.418333,	0.251667,	0.168333],
[3,3,	0.501667,	0.085000,	0.251667],
[3,3,	0.501667,	0.251667,	0.085000],
[3,3,	0.585000,	0.001667,	0.251667],
[3,3,	0.585000,	0.085000,	0.168333],
[3,3,	0.585000,	0.168333,	0.085000],
[3,3,	0.585000,	0.251667,	0.001667],
[3,3,	0.335000,	0.085000,	0.418333],
[3,3,	0.335000,	0.251667,	0.585000],
[3,3,	0.418333,	0.001667,	0.418333],
[3,3,	0.418333,	0.085000,	0.335000],
[3,3,	0.418333,	0.168333,	0.585000],
[3,3,	0.418333,	0.251667,	0.501667],
[3,3,	0.501667,	0.085000,	0.585000],
[3,3,	0.501667,	0.251667,	0.418333],
[3,3,	0.585000,	0.001667,	0.585000],
[3,3,	0.585000,	0.085000,	0.501667],
[3,3,	0.585000,	0.168333,	0.418333],
[3,3,	0.585000,	0.251667,	0.335000],
[3,3,	0.335000,	0.085000,	0.751667],
[3,3,	0.335000,	0.251667,	0.918333],
[3,3,	0.418333,	0.001667,	0.751667],
[3,3,	0.418333,	0.085000,	0.668333],
[3,3,	0.418333,	0.168333,	0.918333],
[3,3,	0.418333,	0.251667,	0.835000],
[3,3,	0.501667,	0.085000,	0.918333],
[3,3,	0.501667,	0.251667,	0.751667],
[3,3,	0.585000,	0.001667,	0.918333],
[3,3,	0.585000,	0.085000,	0.835000],
[3,3,	0.585000,	0.168333,	0.751667],
[3,3,	0.585000,	0.251667,	0.668333],
[3,3,	0.335000,	0.418333,	0.085000],
[3,3,	0.335000,	0.585000,	0.251667],
[3,3,	0.418333,	0.335000,	0.085000],
[3,3,	0.418333,	0.418333,	0.001667],
[3,3,	0.418333,	0.501667,	0.251667],
[3,3,	0.418333,	0.585000,	0.168333],
[3,3,	0.501667,	0.418333,	0.251667],
[3,3,	0.501667,	0.585000,	0.085000],
[3,3,	0.585000,	0.335000,	0.251667],
[3,3,	0.585000,	0.418333,	0.168333],
[3,3,	0.585000,	0.501667,	0.085000],
[3,3,	0.585000,	0.585000,	0.001667],
[3,3,	0.335000,	0.418333,	0.418333],
[3,3,	0.335000,	0.585000,	0.585000],
[3,3,	0.418333,	0.335000,	0.418333],
[3,3,	0.418333,	0.418333,	0.335000],
[3,3,	0.418333,	0.501667,	0.585000],
[3,3,	0.418333,	0.585000,	0.501667],
[3,3,	0.501667,	0.418333,	0.585000],
[3,3,	0.501667,	0.585000,	0.418333],
[3,3,	0.585000,	0.335000,	0.585000],
[3,3,	0.585000,	0.418333,	0.501667],
[3,3,	0.585000,	0.501667,	0.418333],
[3,3,	0.585000,	0.585000,	0.335000],
[3,3,	0.335000,	0.418333,	0.751667],
[3,3,	0.335000,	0.585000,	0.918333],
[3,3,	0.418333,	0.335000,	0.751667],
[3,3,	0.418333,	0.418333,	0.668333],
[3,3,	0.418333,	0.501667,	0.918333],
[3,3,	0.418333,	0.585000,	0.835000],
[3,3,	0.501667,	0.418333,	0.918333],
[3,3,	0.501667,	0.585000,	0.751667],
[3,3,	0.585000,	0.335000,	0.918333],
[3,3,	0.585000,	0.418333,	0.835000],
[3,3,	0.585000,	0.501667,	0.751667],
[3,3,	0.585000,	0.585000,	0.668333],
[3,3,	0.335000,	0.751667,	0.085000],
[3,3,	0.335000,	0.918333,	0.251667],
[3,3,	0.418333,	0.668333,	0.085000],
[3,3,	0.418333,	0.751667,	0.001667],
[3,3,	0.418333,	0.835000,	0.251667],
[3,3,	0.418333,	0.918333,	0.168333],
[3,3,	0.501667,	0.751667,	0.251667],
[3,3,	0.501667,	0.918333,	0.085000],
[3,3,	0.585000,	0.668333,	0.251667],
[3,3,	0.585000,	0.751667,	0.168333],
[3,3,	0.585000,	0.835000,	0.085000],
[3,3,	0.585000,	0.918333,	0.001667],
[3,3,	0.335000,	0.751667,	0.418333],
[3,3,	0.335000,	0.918333,	0.585000],
[3,3,	0.418333,	0.668333,	0.418333],
[3,3,	0.418333,	0.751667,	0.335000],
[3,3,	0.418333,	0.835000,	0.585000],
[3,3,	0.418333,	0.918333,	0.501667],
[3,3,	0.501667,	0.751667,	0.585000],
[3,3,	0.501667,	0.918333,	0.418333],
[3,3,	0.585000,	0.668333,	0.585000],
[3,3,	0.585000,	0.751667,	0.501667],
[3,3,	0.585000,	0.835000,	0.418333],
[3,3,	0.585000,	0.918333,	0.335000],
[3,3,	0.335000,	0.751667,	0.751667],
[3,3,	0.335000,	0.918333,	0.918333],
[3,3,	0.418333,	0.668333,	0.751667],
[3,3,	0.418333,	0.751667,	0.668333],
[3,3,	0.418333,	0.835000,	0.918333],
[3,3,	0.418333,	0.918333,	0.835000],
[3,3,	0.501667,	0.751667,	0.918333],
[3,3,	0.501667,	0.918333,	0.751667],
[3,3,	0.585000,	0.668333,	0.918333],
[3,3,	0.585000,	0.751667,	0.835000],
[3,3,	0.585000,	0.835000,	0.751667],
[3,3,	0.585000,	0.918333,	0.668333],
[3,3,	0.668333,	0.085000,	0.085000],
[3,3,	0.668333,	0.251667,	0.251667],
[3,3,	0.751667,	0.001667,	0.085000],
[3,3,	0.751667,	0.085000,	0.001667],
[3,3,	0.751667,	0.168333,	0.251667],
[3,3,	0.751667,	0.251667,	0.168333],
[3,3,	0.835000,	0.085000,	0.251667],
[3,3,	0.835000,	0.251667,	0.085000],
[3,3,	0.918333,	0.001667,	0.251667],
[3,3,	0.918333,	0.085000,	0.168333],
[3,3,	0.918333,	0.168333,	0.085000],
[3,3,	0.918333,	0.251667,	0.001667],
[3,3,	0.668333,	0.085000,	0.418333],
[3,3,	0.668333,	0.251667,	0.585000],
[3,3,	0.751667,	0.001667,	0.418333],
[3,3,	0.751667,	0.085000,	0.335000],
[3,3,	0.751667,	0.168333,	0.585000],
[3,3,	0.751667,	0.251667,	0.501667],
[3,3,	0.835000,	0.085000,	0.585000],
[3,3,	0.835000,	0.251667,	0.418333],
[3,3,	0.918333,	0.001667,	0.585000],
[3,3,	0.918333,	0.085000,	0.501667],
[3,3,	0.918333,	0.168333,	0.418333],
[3,3,	0.918333,	0.251667,	0.335000],
[3,3,	0.668333,	0.085000,	0.751667],
[3,3,	0.668333,	0.251667,	0.918333],
[3,3,	0.751667,	0.001667,	0.751667],
[3,3,	0.751667,	0.085000,	0.668333],
[3,3,	0.751667,	0.168333,	0.918333],
[3,3,	0.751667,	0.251667,	0.835000],
[3,3,	0.835000,	0.085000,	0.918333],
[3,3,	0.835000,	0.251667,	0.751667],
[3,3,	0.918333,	0.001667,	0.918333],
[3,3,	0.918333,	0.085000,	0.835000],
[3,3,	0.918333,	0.168333,	0.751667],
[3,3,	0.918333,	0.251667,	0.668333],
[3,3,	0.668333,	0.418333,	0.085000],
[3,3,	0.668333,	0.585000,	0.251667],
[3,3,	0.751667,	0.335000,	0.085000],
[3,3,	0.751667,	0.418333,	0.001667],
[3,3,	0.751667,	0.501667,	0.251667],
[3,3,	0.751667,	0.585000,	0.168333],
[3,3,	0.835000,	0.418333,	0.251667],
[3,3,	0.835000,	0.585000,	0.085000],
[3,3,	0.918333,	0.335000,	0.251667],
[3,3,	0.918333,	0.418333,	0.168333],
[3,3,	0.918333,	0.501667,	0.085000],
[3,3,	0.918333,	0.585000,	0.001667],
[3,3,	0.668333,	0.418333,	0.418333],
[3,3,	0.668333,	0.585000,	0.585000],
[3,3,	0.751667,	0.335000,	0.418333],
[3,3,	0.751667,	0.418333,	0.335000],
[3,3,	0.751667,	0.501667,	0.585000],
[3,3,	0.751667,	0.585000,	0.501667],
[3,3,	0.835000,	0.418333,	0.585000],
[3,3,	0.835000,	0.585000,	0.418333],
[3,3,	0.918333,	0.335000,	0.585000],
[3,3,	0.918333,	0.418333,	0.501667],
[3,3,	0.918333,	0.501667,	0.418333],
[3,3,	0.918333,	0.585000,	0.335000],
[3,3,	0.668333,	0.418333,	0.751667],
[3,3,	0.668333,	0.585000,	0.918333],
[3,3,	0.751667,	0.335000,	0.751667],
[3,3,	0.751667,	0.418333,	0.668333],
[3,3,	0.751667,	0.501667,	0.918333],
[3,3,	0.751667,	0.585000,	0.835000],
[3,3,	0.835000,	0.418333,	0.918333],
[3,3,	0.835000,	0.585000,	0.751667],
[3,3,	0.918333,	0.335000,	0.918333],
[3,3,	0.918333,	0.418333,	0.835000],
[3,3,	0.918333,	0.501667,	0.751667],
[3,3,	0.918333,	0.585000,	0.668333],
[3,3,	0.668333,	0.751667,	0.085000],
[3,3,	0.668333,	0.918333,	0.251667],
[3,3,	0.751667,	0.668333,	0.085000],
[3,3,	0.751667,	0.751667,	0.001667],
[3,3,	0.751667,	0.835000,	0.251667],
[3,3,	0.751667,	0.918333,	0.168333],
[3,3,	0.835000,	0.751667,	0.251667],
[3,3,	0.835000,	0.918333,	0.085000],
[3,3,	0.918333,	0.668333,	0.251667],
[3,3,	0.918333,	0.751667,	0.168333],
[3,3,	0.918333,	0.835000,	0.085000],
[3,3,	0.918333,	0.918333,	0.001667],
[3,3,	0.668333,	0.751667,	0.418333],
[3,3,	0.668333,	0.918333,	0.585000],
[3,3,	0.751667,	0.668333,	0.418333],
[3,3,	0.751667,	0.751667,	0.335000],
[3,3,	0.751667,	0.835000,	0.585000],
[3,3,	0.751667,	0.918333,	0.501667],
[3,3,	0.835000,	0.751667,	0.585000],
[3,3,	0.835000,	0.918333,	0.418333],
[3,3,	0.918333,	0.668333,	0.585000],
[3,3,	0.918333,	0.751667,	0.501667],
[3,3,	0.918333,	0.835000,	0.418333],
[3,3,	0.918333,	0.918333,	0.335000],
[3,3,	0.668333,	0.751667,	0.751667],
[3,3,	0.668333,	0.918333,	0.918333],
[3,3,	0.751667,	0.668333,	0.751667],
[3,3,	0.751667,	0.751667,	0.668333],
[3,3,	0.751667,	0.835000,	0.918333],
[3,3,	0.751667,	0.918333,	0.835000],
[3,3,	0.835000,	0.751667,	0.918333],
[3,3,	0.835000,	0.918333,	0.751667],
[3,3,	0.918333,	0.668333,	0.918333],
[3,3,	0.918333,	0.751667,	0.835000],
[3,3,	0.918333,	0.835000,	0.751667],
[3,3,	0.918333,	0.918333,	0.668333],
[39,39,0.001667,	0.001667,	0.001667],
[39,39,0.001667,	0.085000,	0.251667],
[39,39,0.001667,	0.168333,	0.168333],
[39,39,0.001667,	0.251667,	0.085000],
[39,39,0.085000,	0.001667,	0.251667],
[39,39,0.085000,	0.085000,	0.168333],
[39,39,0.085000,	0.168333,	0.085000],
[39,39,0.085000,	0.251667,	0.001667],
[39,39,0.168333,	0.001667,	0.168333],
[39,39,0.168333,	0.085000,	0.085000],
[39,39,0.168333,	0.168333,	0.001667],
[39,39,0.168333,	0.251667,	0.251667],
[39,39,0.251667,	0.001667,	0.085000],
[39,39,0.251667,	0.085000,	0.001667],
[39,39,0.251667,	0.168333,	0.251667],
[39,39,0.251667,	0.251667,	0.168333],
[39,39,0.001667,	0.001667,	0.335000],
[39,39,0.001667,	0.085000,	0.585000],
[39,39,0.001667,	0.168333,	0.501667],
[39,39,0.001667,	0.251667,	0.418333],
[39,39,0.085000,	0.001667,	0.585000],
[39,39,0.085000,	0.085000,	0.501667],
[39,39,0.085000,	0.168333,	0.418333],
[39,39,0.085000,	0.251667,	0.335000],
[39,39,0.168333,	0.001667,	0.501667],
[39,39,0.168333,	0.085000,	0.418333],
[39,39,0.168333,	0.168333,	0.335000],
[39,39,0.168333,	0.251667,	0.585000],
[39,39,0.251667,	0.001667,	0.418333],
[39,39,0.251667,	0.085000,	0.335000],
[39,39,0.251667,	0.168333,	0.585000],
[39,39,0.251667,	0.251667,	0.501667],
[39,39,0.001667,	0.001667,	0.668333],
[39,39,0.001667,	0.085000,	0.918333],
[39,39,0.001667,	0.168333,	0.835000],
[39,39,0.001667,	0.251667,	0.751667],
[39,39,0.085000,	0.001667,	0.918333],
[39,39,0.085000,	0.085000,	0.835000],
[39,39,0.085000,	0.168333,	0.751667],
[39,39,0.085000,	0.251667,	0.668333],
[39,39,0.168333,	0.001667,	0.835000],
[39,39,0.168333,	0.085000,	0.751667],
[39,39,0.168333,	0.168333,	0.668333],
[39,39,0.168333,	0.251667,	0.918333],
[39,39,0.251667,	0.001667,	0.751667],
[39,39,0.251667,	0.085000,	0.668333],
[39,39,0.251667,	0.168333,	0.918333],
[39,39,0.251667,	0.251667,	0.835000],
[39,39,0.001667,	0.335000,	0.001667],
[39,39,0.001667,	0.418333,	0.251667],
[39,39,0.001667,	0.501667,	0.168333],
[39,39,0.001667,	0.585000,	0.085000],
[39,39,0.085000,	0.335000,	0.251667],
[39,39,0.085000,	0.418333,	0.168333],
[39,39,0.085000,	0.501667,	0.085000],
[39,39,0.085000,	0.585000,	0.001667],
[39,39,0.168333,	0.335000,	0.168333],
[39,39,0.168333,	0.418333,	0.085000],
[39,39,0.168333,	0.501667,	0.001667],
[39,39,0.168333,	0.585000,	0.251667],
[39,39,0.251667,	0.335000,	0.085000],
[39,39,0.251667,	0.418333,	0.001667],
[39,39,0.251667,	0.501667,	0.251667],
[39,39,0.251667,	0.585000,	0.168333],
[39,39,0.001667,	0.335000,	0.335000],
[39,39,0.001667,	0.418333,	0.585000],
[39,39,0.001667,	0.501667,	0.501667],
[39,39,0.001667,	0.585000,	0.418333],
[39,39,0.085000,	0.335000,	0.585000],
[39,39,0.085000,	0.418333,	0.501667],
[39,39,0.085000,	0.501667,	0.418333],
[39,39,0.085000,	0.585000,	0.335000],
[39,39,0.168333,	0.335000,	0.501667],
[39,39,0.168333,	0.418333,	0.418333],
[39,39,0.168333,	0.501667,	0.335000],
[39,39,0.168333,	0.585000,	0.585000],
[39,39,0.251667,	0.335000,	0.418333],
[39,39,0.251667,	0.418333,	0.335000],
[39,39,0.251667,	0.501667,	0.585000],
[39,39,0.251667,	0.585000,	0.501667],
[39,39,0.001667,	0.335000,	0.668333],
[39,39,0.001667,	0.418333,	0.918333],
[39,39,0.001667,	0.501667,	0.835000],
[39,39,0.001667,	0.585000,	0.751667],
[39,39,0.085000,	0.335000,	0.918333],
[39,39,0.085000,	0.418333,	0.835000],
[39,39,0.085000,	0.501667,	0.751667],
[39,39,0.085000,	0.585000,	0.668333],
[39,39,0.168333,	0.335000,	0.835000],
[39,39,0.168333,	0.418333,	0.751667],
[39,39,0.168333,	0.501667,	0.668333],
[39,39,0.168333,	0.585000,	0.918333],
[39,39,0.251667,	0.335000,	0.751667],
[39,39,0.251667,	0.418333,	0.668333],
[39,39,0.251667,	0.501667,	0.918333],
[39,39,0.251667,	0.585000,	0.835000],
[39,39,0.001667,	0.668333,	0.001667],
[39,39,0.001667,	0.751667,	0.251667],
[39,39,0.001667,	0.835000,	0.168333],
[39,39,0.001667,	0.918333,	0.085000],
[39,39,0.085000,	0.668333,	0.251667],
[39,39,0.085000,	0.751667,	0.168333],
[39,39,0.085000,	0.835000,	0.085000],
[39,39,0.085000,	0.918333,	0.001667],
[39,39,0.168333,	0.668333,	0.168333],
[39,39,0.168333,	0.751667,	0.085000],
[39,39,0.168333,	0.835000,	0.001667],
[39,39,0.168333,	0.918333,	0.251667],
[39,39,0.251667,	0.668333,	0.085000],
[39,39,0.251667,	0.751667,	0.001667],
[39,39,0.251667,	0.835000,	0.251667],
[39,39,0.251667,	0.918333,	0.168333],
[39,39,0.001667,	0.668333,	0.335000],
[39,39,0.001667,	0.751667,	0.585000],
[39,39,0.001667,	0.835000,	0.501667],
[39,39,0.001667,	0.918333,	0.418333],
[39,39,0.085000,	0.668333,	0.585000],
[39,39,0.085000,	0.751667,	0.501667],
[39,39,0.085000,	0.835000,	0.418333],
[39,39,0.085000,	0.918333,	0.335000],
[39,39,0.168333,	0.668333,	0.501667],
[39,39,0.168333,	0.751667,	0.418333],
[39,39,0.168333,	0.835000,	0.335000],
[39,39,0.168333,	0.918333,	0.585000],
[39,39,0.251667,	0.668333,	0.418333],
[39,39,0.251667,	0.751667,	0.335000],
[39,39,0.251667,	0.835000,	0.585000],
[39,39,0.251667,	0.918333,	0.501667],
[39,39,0.001667,	0.668333,	0.668333],
[39,39,0.001667,	0.751667,	0.918333],
[39,39,0.001667,	0.835000,	0.835000],
[39,39,0.001667,	0.918333,	0.751667],
[39,39,0.085000,	0.668333,	0.918333],
[39,39,0.085000,	0.751667,	0.835000],
[39,39,0.085000,	0.835000,	0.751667],
[39,39,0.085000,	0.918333,	0.668333],
[39,39,0.168333,	0.668333,	0.835000],
[39,39,0.168333,	0.751667,	0.751667],
[39,39,0.168333,	0.835000,	0.668333],
[39,39,0.168333,	0.918333,	0.918333],
[39,39,0.251667,	0.668333,	0.751667],
[39,39,0.251667,	0.751667,	0.668333],
[39,39,0.251667,	0.835000,	0.918333],
[39,39,0.251667,	0.918333,	0.835000],
[39,39,0.335000,	0.001667,	0.001667],
[39,39,0.335000,	0.085000,	0.251667],
[39,39,0.335000,	0.168333,	0.168333],
[39,39,0.335000,	0.251667,	0.085000],
[39,39,0.418333,	0.001667,	0.251667],
[39,39,0.418333,	0.085000,	0.168333],
[39,39,0.418333,	0.168333,	0.085000],
[39,39,0.418333,	0.251667,	0.001667],
[39,39,0.501667,	0.001667,	0.168333],
[39,39,0.501667,	0.085000,	0.085000],
[39,39,0.501667,	0.168333,	0.001667],
[39,39,0.501667,	0.251667,	0.251667],
[39,39,0.585000,	0.001667,	0.085000],
[39,39,0.585000,	0.085000,	0.001667],
[39,39,0.585000,	0.168333,	0.251667],
[39,39,0.585000,	0.251667,	0.168333],
[39,39,0.335000,	0.001667,	0.335000],
[39,39,0.335000,	0.085000,	0.585000],
[39,39,0.335000,	0.168333,	0.501667],
[39,39,0.335000,	0.251667,	0.418333],
[39,39,0.418333,	0.001667,	0.585000],
[39,39,0.418333,	0.085000,	0.501667],
[39,39,0.418333,	0.168333,	0.418333],
[39,39,0.418333,	0.251667,	0.335000],
[39,39,0.501667,	0.001667,	0.501667],
[39,39,0.501667,	0.085000,	0.418333],
[39,39,0.501667,	0.168333,	0.335000],
[39,39,0.501667,	0.251667,	0.585000],
[39,39,0.585000,	0.001667,	0.418333],
[39,39,0.585000,	0.085000,	0.335000],
[39,39,0.585000,	0.168333,	0.585000],
[39,39,0.585000,	0.251667,	0.501667],
[39,39,0.335000,	0.001667,	0.668333],
[39,39,0.335000,	0.085000,	0.918333],
[39,39,0.335000,	0.168333,	0.835000],
[39,39,0.335000,	0.251667,	0.751667],
[39,39,0.418333,	0.001667,	0.918333],
[39,39,0.418333,	0.085000,	0.835000],
[39,39,0.418333,	0.168333,	0.751667],
[39,39,0.418333,	0.251667,	0.668333],
[39,39,0.501667,	0.001667,	0.835000],
[39,39,0.501667,	0.085000,	0.751667],
[39,39,0.501667,	0.168333,	0.668333],
[39,39,0.501667,	0.251667,	0.918333],
[39,39,0.585000,	0.001667,	0.751667],
[39,39,0.585000,	0.085000,	0.668333],
[39,39,0.585000,	0.168333,	0.918333],
[39,39,0.585000,	0.251667,	0.835000],
[39,39,0.335000,	0.335000,	0.001667],
[39,39,0.335000,	0.418333,	0.251667],
[39,39,0.335000,	0.501667,	0.168333],
[39,39,0.335000,	0.585000,	0.085000],
[39,39,0.418333,	0.335000,	0.251667],
[39,39,0.418333,	0.418333,	0.168333],
[39,39,0.418333,	0.501667,	0.085000],
[39,39,0.418333,	0.585000,	0.001667],
[39,39,0.501667,	0.335000,	0.168333],
[39,39,0.501667,	0.418333,	0.085000],
[39,39,0.501667,	0.501667,	0.001667],
[39,39,0.501667,	0.585000,	0.251667],
[39,39,0.585000,	0.335000,	0.085000],
[39,39,0.585000,	0.418333,	0.001667],
[39,39,0.585000,	0.501667,	0.251667],
[39,39,0.585000,	0.585000,	0.168333],
[39,39,0.335000,	0.335000,	0.335000],
[39,39,0.335000,	0.418333,	0.585000],
[39,39,0.335000,	0.501667,	0.501667],
[39,39,0.335000,	0.585000,	0.418333],
[39,39,0.418333,	0.335000,	0.585000],
[39,39,0.418333,	0.418333,	0.501667],
[39,39,0.418333,	0.501667,	0.418333],
[39,39,0.418333,	0.585000,	0.335000],
[39,39,0.501667,	0.335000,	0.501667],
[39,39,0.501667,	0.418333,	0.418333],
[39,39,0.501667,	0.501667,	0.335000],
[39,39,0.501667,	0.585000,	0.585000],
[39,39,0.585000,	0.335000,	0.418333],
[39,39,0.585000,	0.418333,	0.335000],
[39,39,0.585000,	0.501667,	0.585000],
[39,39,0.585000,	0.585000,	0.501667],
[39,39,0.335000,	0.335000,	0.668333],
[39,39,0.335000,	0.418333,	0.918333],
[39,39,0.335000,	0.501667,	0.835000],
[39,39,0.335000,	0.585000,	0.751667],
[39,39,0.418333,	0.335000,	0.918333],
[39,39,0.418333,	0.418333,	0.835000],
[39,39,0.418333,	0.501667,	0.751667],
[39,39,0.418333,	0.585000,	0.668333],
[39,39,0.501667,	0.335000,	0.835000],
[39,39,0.501667,	0.418333,	0.751667],
[39,39,0.501667,	0.501667,	0.668333],
[39,39,0.501667,	0.585000,	0.918333],
[39,39,0.585000,	0.335000,	0.751667],
[39,39,0.585000,	0.418333,	0.668333],
[39,39,0.585000,	0.501667,	0.918333],
[39,39,0.585000,	0.585000,	0.835000],
[39,39,0.335000,	0.668333,	0.001667],
[39,39,0.335000,	0.751667,	0.251667],
[39,39,0.335000,	0.835000,	0.168333],
[39,39,0.335000,	0.918333,	0.085000],
[39,39,0.418333,	0.668333,	0.251667],
[39,39,0.418333,	0.751667,	0.168333],
[39,39,0.418333,	0.835000,	0.085000],
[39,39,0.418333,	0.918333,	0.001667],
[39,39,0.501667,	0.668333,	0.168333],
[39,39,0.501667,	0.751667,	0.085000],
[39,39,0.501667,	0.835000,	0.001667],
[39,39,0.501667,	0.918333,	0.251667],
[39,39,0.585000,	0.668333,	0.085000],
[39,39,0.585000,	0.751667,	0.001667],
[39,39,0.585000,	0.835000,	0.251667],
[39,39,0.585000,	0.918333,	0.168333],
[39,39,0.335000,	0.668333,	0.335000],
[39,39,0.335000,	0.751667,	0.585000],
[39,39,0.335000,	0.835000,	0.501667],
[39,39,0.335000,	0.918333,	0.418333],
[39,39,0.418333,	0.668333,	0.585000],
[39,39,0.418333,	0.751667,	0.501667],
[39,39,0.418333,	0.835000,	0.418333],
[39,39,0.418333,	0.918333,	0.335000],
[39,39,0.501667,	0.668333,	0.501667],
[39,39,0.501667,	0.751667,	0.418333],
[39,39,0.501667,	0.835000,	0.335000],
[39,39,0.501667,	0.918333,	0.585000],
[39,39,0.585000,	0.668333,	0.418333],
[39,39,0.585000,	0.751667,	0.335000],
[39,39,0.585000,	0.835000,	0.585000],
[39,39,0.585000,	0.918333,	0.501667],
[39,39,0.335000,	0.668333,	0.668333],
[39,39,0.335000,	0.751667,	0.918333],
[39,39,0.335000,	0.835000,	0.835000],
[39,39,0.335000,	0.918333,	0.751667],
[39,39,0.418333,	0.668333,	0.918333],
[39,39,0.418333,	0.751667,	0.835000],
[39,39,0.418333,	0.835000,	0.751667],
[39,39,0.418333,	0.918333,	0.668333],
[39,39,0.501667,	0.668333,	0.835000],
[39,39,0.501667,	0.751667,	0.751667],
[39,39,0.501667,	0.835000,	0.668333],
[39,39,0.501667,	0.918333,	0.918333],
[39,39,0.585000,	0.668333,	0.751667],
[39,39,0.585000,	0.751667,	0.668333],
[39,39,0.585000,	0.835000,	0.918333],
[39,39,0.585000,	0.918333,	0.835000],
[39,39,0.668333,	0.001667,	0.001667],
[39,39,0.668333,	0.085000,	0.251667],
[39,39,0.668333,	0.168333,	0.168333],
[39,39,0.668333,	0.251667,	0.085000],
[39,39,0.751667,	0.001667,	0.251667],
[39,39,0.751667,	0.085000,	0.168333],
[39,39,0.751667,	0.168333,	0.085000],
[39,39,0.751667,	0.251667,	0.001667],
[39,39,0.835000,	0.001667,	0.168333],
[39,39,0.835000,	0.085000,	0.085000],
[39,39,0.835000,	0.168333,	0.001667],
[39,39,0.835000,	0.251667,	0.251667],
[39,39,0.918333,	0.001667,	0.085000],
[39,39,0.918333,	0.085000,	0.001667],
[39,39,0.918333,	0.168333,	0.251667],
[39,39,0.918333,	0.251667,	0.168333],
[39,39,0.668333,	0.001667,	0.335000],
[39,39,0.668333,	0.085000,	0.585000],
[39,39,0.668333,	0.168333,	0.501667],
[39,39,0.668333,	0.251667,	0.418333],
[39,39,0.751667,	0.001667,	0.585000],
[39,39,0.751667,	0.085000,	0.501667],
[39,39,0.751667,	0.168333,	0.418333],
[39,39,0.751667,	0.251667,	0.335000],
[39,39,0.835000,	0.001667,	0.501667],
[39,39,0.835000,	0.085000,	0.418333],
[39,39,0.835000,	0.168333,	0.335000],
[39,39,0.835000,	0.251667,	0.585000],
[39,39,0.918333,	0.001667,	0.418333],
[39,39,0.918333,	0.085000,	0.335000],
[39,39,0.918333,	0.168333,	0.585000],
[39,39,0.918333,	0.251667,	0.501667],
[39,39,0.668333,	0.001667,	0.668333],
[39,39,0.668333,	0.085000,	0.918333],
[39,39,0.668333,	0.168333,	0.835000],
[39,39,0.668333,	0.251667,	0.751667],
[39,39,0.751667,	0.001667,	0.918333],
[39,39,0.751667,	0.085000,	0.835000],
[39,39,0.751667,	0.168333,	0.751667],
[39,39,0.751667,	0.251667,	0.668333],
[39,39,0.835000,	0.001667,	0.835000],
[39,39,0.835000,	0.085000,	0.751667],
[39,39,0.835000,	0.168333,	0.668333],
[39,39,0.835000,	0.251667,	0.918333],
[39,39,0.918333,	0.001667,	0.751667],
[39,39,0.918333,	0.085000,	0.668333],
[39,39,0.918333,	0.168333,	0.918333],
[39,39,0.918333,	0.251667,	0.835000],
[39,39,0.668333,	0.335000,	0.001667],
[39,39,0.668333,	0.418333,	0.251667],
[39,39,0.668333,	0.501667,	0.168333],
[39,39,0.668333,	0.585000,	0.085000],
[39,39,0.751667,	0.335000,	0.251667],
[39,39,0.751667,	0.418333,	0.168333],
[39,39,0.751667,	0.501667,	0.085000],
[39,39,0.751667,	0.585000,	0.001667],
[39,39,0.835000,	0.335000,	0.168333],
[39,39,0.835000,	0.418333,	0.085000],
[39,39,0.835000,	0.501667,	0.001667],
[39,39,0.835000,	0.585000,	0.251667],
[39,39,0.918333,	0.335000,	0.085000],
[39,39,0.918333,	0.418333,	0.001667],
[39,39,0.918333,	0.501667,	0.251667],
[39,39,0.918333,	0.585000,	0.168333],
[39,39,0.668333,	0.335000,	0.335000],
[39,39,0.668333,	0.418333,	0.585000],
[39,39,0.668333,	0.501667,	0.501667],
[39,39,0.668333,	0.585000,	0.418333],
[39,39,0.751667,	0.335000,	0.585000],
[39,39,0.751667,	0.418333,	0.501667],
[39,39,0.751667,	0.501667,	0.418333],
[39,39,0.751667,	0.585000,	0.335000],
[39,39,0.835000,	0.335000,	0.501667],
[39,39,0.835000,	0.418333,	0.418333],
[39,39,0.835000,	0.501667,	0.335000],
[39,39,0.835000,	0.585000,	0.585000],
[39,39,0.918333,	0.335000,	0.418333],
[39,39,0.918333,	0.418333,	0.335000],
[39,39,0.918333,	0.501667,	0.585000],
[39,39,0.918333,	0.585000,	0.501667],
[39,39,0.668333,	0.335000,	0.668333],
[39,39,0.668333,	0.418333,	0.918333],
[39,39,0.668333,	0.501667,	0.835000],
[39,39,0.668333,	0.585000,	0.751667],
[39,39,0.751667,	0.335000,	0.918333],
[39,39,0.751667,	0.418333,	0.835000],
[39,39,0.751667,	0.501667,	0.751667],
[39,39,0.751667,	0.585000,	0.668333],
[39,39,0.835000,	0.335000,	0.835000],
[39,39,0.835000,	0.418333,	0.751667],
[39,39,0.835000,	0.501667,	0.668333],
[39,39,0.835000,	0.585000,	0.918333],
[39,39,0.918333,	0.335000,	0.751667],
[39,39,0.918333,	0.418333,	0.668333],
[39,39,0.918333,	0.501667,	0.918333],
[39,39,0.918333,	0.585000,	0.835000],
[39,39,0.668333,	0.668333,	0.001667],
[39,39,0.668333,	0.751667,	0.251667],
[39,39,0.668333,	0.835000,	0.168333],
[39,39,0.668333,	0.918333,	0.085000],
[39,39,0.751667,	0.668333,	0.251667],
[39,39,0.751667,	0.751667,	0.168333],
[39,39,0.751667,	0.835000,	0.085000],
[39,39,0.751667,	0.918333,	0.001667],
[39,39,0.835000,	0.668333,	0.168333],
[39,39,0.835000,	0.751667,	0.085000],
[39,39,0.835000,	0.835000,	0.001667],
[39,39,0.835000,	0.918333,	0.251667],
[39,39,0.918333,	0.668333,	0.085000],
[39,39,0.918333,	0.751667,	0.001667],
[39,39,0.918333,	0.835000,	0.251667],
[39,39,0.918333,	0.918333,	0.168333],
[39,39,0.668333,	0.668333,	0.335000],
[39,39,0.668333,	0.751667,	0.585000],
[39,39,0.668333,	0.835000,	0.501667],
[39,39,0.668333,	0.918333,	0.418333],
[39,39,0.751667,	0.668333,	0.585000],
[39,39,0.751667,	0.751667,	0.501667],
[39,39,0.751667,	0.835000,	0.418333],
[39,39,0.751667,	0.918333,	0.335000],
[39,39,0.835000,	0.668333,	0.501667],
[39,39,0.835000,	0.751667,	0.418333],
[39,39,0.835000,	0.835000,	0.335000],
[39,39,0.835000,	0.918333,	0.585000],
[39,39,0.918333,	0.668333,	0.418333],
[39,39,0.918333,	0.751667,	0.335000],
[39,39,0.918333,	0.835000,	0.585000],
[39,39,0.918333,	0.918333,	0.501667],
[39,39,0.668333,	0.668333,	0.668333],
[39,39,0.668333,	0.751667,	0.918333],
[39,39,0.668333,	0.835000,	0.835000],
[39,39,0.668333,	0.918333,	0.751667],
[39,39,0.751667,	0.668333,	0.918333],
[39,39,0.751667,	0.751667,	0.835000],
[39,39,0.751667,	0.835000,	0.751667],
[39,39,0.751667,	0.918333,	0.668333],
[39,39,0.835000,	0.668333,	0.835000],
[39,39,0.835000,	0.751667,	0.751667],
[39,39,0.835000,	0.835000,	0.668333],
[39,39,0.835000,	0.918333,	0.918333],
[39,39,0.918333,	0.668333,	0.751667],
[39,39,0.918333,	0.751667,	0.668333],
[39,39,0.918333,	0.835000,	0.918333],
[39,39,0.918333,	0.918333,	0.835000]])

unitCellY = np.array([
[39, 39,	0.00500,	0.00500,	0.00500],
#[3,	 3,	    0.00500,	0.25500,	0.25500],
[39,	 39,	    0.00500,	0.25500,	0.75500],
[39, 39,	0.00500,	0.50500,	0.50500],
[39,	 39,	    0.00500,	0.75500,	0.25500],
#[3,	 3,	    0.00500,	0.75500,	0.75500],
#[3,	 3,	    0.25500,	0.00500,	0.25500],
[39,	 39,	    0.25500,	0.00500,	0.75500],
#[3,	 3,	    0.25500,	0.25500,	0.00500],
[39,	 39,	    0.25500,	0.25500,	0.50500],
[39,	 39,	    0.25500,	0.50500,	0.25500],
#[3,	 3,	    0.25500,	0.50500,	0.75500],
[39,	 39,	    0.25500,	0.75500,	0.00500],
#[3,	 3,	    0.25500,	0.75500,	0.50500],
[39, 39,	0.50500,	0.00500,	0.50500],
[39,	 39,	    0.50500,	0.25500,	0.25500],
#[3,	 3,	    0.50500,	0.25500,	0.75500],
[39, 39,	0.50500,	0.50500,	0.00500],
#[3,	 3,	    0.50500,	0.75500,	0.25500],
[39,	 39,	    0.50500,	0.75500,	0.75500],
[39,	 39,	    0.75500,	0.00500,	0.25500],
#[3,	 3,	    0.75500,	0.00500,	0.75500],
[39,	 39,	    0.75500,	0.25500,	0.00500],
#[3,	 3,	    0.75500,	0.25500,	0.50500],
#[3,	 3,	    0.75500,	0.50500,	0.25500],
[39,	 39,	    0.75500,	0.50500,	0.75500],
#[3,	 3,	    0.75500,	0.75500,	0.00500],
[39,	 39, 	0.75500,	0.75500,	0.50500]])



nx = int(modelParams.nx)
ny = int(modelParams.ny)
nz = int(modelParams.nz)
a = modelParams.a 
b = modelParams.b 
c = modelParams.c 
natoms = modelParams.natoms

p = 0.5
A = 0.5
#q1 = np.array([-nx,nx,0])
q1 = np.array([-nx*1.33333,nx*1.3333333,0]) # 1 1 1, 1 1 -1
#q1 = np.array([nx*1.33333,0,-nx*1.3333333]) # 1 -1 1
#q1 = np.array([0,nx*1.3333333,-nx*1.333333]) # -1 1 1

#Make atom array from unit cell
atomArray = np.zeros((natoms*nx*ny*nz, 5))
#make supercell for superspace ordering 

for i in range(1,nx-1):
    for j in range(1,ny-1):
        for k in range(1,nz-1):
            for l in range(natoms):
                address = (i*(ny)*(nz)+(j*(nz))+k)*natoms + l
                atomArray[address,:] = unitCellY[l,:]
                x = np.array([(atomArray[address,2]+i)/nx,(atomArray[address,3]+j)/ny,(atomArray[address,4]+k)/nz])
                if supercell[address] == 1:
                    if  rand.random() < 0.8 + 0.2*np.cos(2*np.pi*np.dot(x,q1)):
                        if rand.random() < 0.8125:
                            atomArray[address,0] = 3
                            atomArray[address,1] = 3
                        else:
                            atomArray[address,0] = 0
                            atomArray[address,1] = 0
                    else:
                        atomArray[address,0] = 39
                        atomArray[address,1] = 39
                else:
                    if  rand.random() < 0.8 - 0.2*np.cos(2*np.pi*np.dot(x,q1)):
                        if rand.random() < 0.8125:
                                atomArray[address,0] = 3
                                atomArray[address,1] = 3
                        else:
                            atomArray[address,0] = 0
                            atomArray[address,1] = 0
                    else:
                        atomArray[address,0] = 39
                        atomArray[address,1] = 39



averageAtoms,Uiso = Utils.averageUnitCell(atomArray,modelParams,1)

t8 = time.time()

##
print("Time taken: {:.4f}s".format(t8-t0))
print("\n   Exporting to..." )
#exports.FullAsCif(filestem,run,atomArray,modelParams,True)
#exports.FullAsCif(filestem+"_supercell",run,supercellArray,modelParams,True)
exports.Scatty(filestem,run,atomArray,averageAtoms,modelParams,1)
#exports.PartialLayersMin(filestem,run,supercell)
#exports.printForSpringy(atomArray,modelParams)
exports.Average(filestem,run,averageAtoms,modelParams,Uiso)
exports.fold(filestem,atomArray,modelParams,3,3,3,1)
#exports.printFullModel(atomArray,modelParams)
print("\n==================================================")

'''

##  NOTE THAT SCATTY IS TOO SLOW WITH DISPLACEMENTS - USE WELBERRY INSTEAD




























































